{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nimport Web3 from 'web3';\nvar web3 = new Web3(window.ethereum);\n\nif (window.ethereum) {\n  try {\n    window.ethereum.enable().then(function () {// User has allowed account access to DApp...\n    });\n  } catch (e) {\n    // User has denied account access to DApp...\n    alert('Cant use window.ethereum !');\n  }\n} // Legacy DApp Browsers\nelse if (window.web3) {\n    web3 = (_readOnlyError(\"web3\"), new Web3(window.web3.currentProvider));\n  } // Non-DApp Browsers\n  else {\n      alert('You have to install MetaMask !');\n    }\n\nexport default web3;\n/*import Web3 from 'web3';\n\nlet web3;\n\nif(typeof window !== 'undefined' && window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    web3= new Web3(window.web3.currentProvider);\n    console.log('We are in the browser and metamask is running.');\n} else{\n    // We are on the server *OR* the user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n        `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\n    );\n    web3 = new Web3(provider);\n    console.log('We are on the server *OR* the user is not running metamask');\n}\n\nexport default web3;\n*/","map":{"version":3,"sources":["/home/garibaldi/Documents/Crypto/Apps/Kickstarter/client/web3.js"],"names":["Web3","web3","window","ethereum","enable","then","e","alert","currentProvider"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAMC,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAb;;AAEA,IAAID,MAAM,CAACC,QAAX,EAAqB;AAClB,MAAI;AACDD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBC,IAAzB,CAA8B,YAAW,CACrC;AACH,KAFD;AAGF,GAJD,CAIE,OAAMC,CAAN,EAAS;AACR;AACAC,IAAAA,KAAK,CAAC,4BAAD,CAAL;AACF;AACH,CATD,CAUA;AAVA,KAWK,IAAIL,MAAM,CAACD,IAAX,EAAiB;AAClBA,IAAAA,IAAI,4BAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYO,eAArB,CAAH,CAAJ;AACH,GAFI,CAGL;AAHK,OAIA;AACDD,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AAED,eAAeN,IAAf;AACA","sourcesContent":["import Web3 from 'web3'\n\nconst web3 = new Web3(window.ethereum);\n\nif (window.ethereum) {\n   try {\n      window.ethereum.enable().then(function() {\n          // User has allowed account access to DApp...\n      });\n   } catch(e) {\n      // User has denied account access to DApp...\n      alert('Cant use window.ethereum !');\n   }\n}\n// Legacy DApp Browsers\nelse if (window.web3) {\n    web3 = new Web3(window.web3.currentProvider);\n}\n// Non-DApp Browsers\nelse {\n    alert('You have to install MetaMask !');\n}\n\nexport default web3;\n/*import Web3 from 'web3';\n\nlet web3;\n\nif(typeof window !== 'undefined' && window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    web3= new Web3(window.web3.currentProvider);\n    console.log('We are in the browser and metamask is running.');\n} else{\n    // We are on the server *OR* the user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n        `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\n    );\n    web3 = new Web3(provider);\n    console.log('We are on the server *OR* the user is not running metamask');\n}\n\nexport default web3;\n*/"]},"metadata":{},"sourceType":"module"}