{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nvar web3 = new Web3(window.web3.currentProvider);\nwindow.addEventListener(\"load\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 11;\n            break;\n          }\n\n          window.web3 = new Web3(window.ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return window.ethereum.enable();\n\n        case 5:\n          _context.next = 9;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 9:\n          _context.next = 12;\n          break;\n\n        case 11:\n          // Legacy dapp browsers...\n          if (window.web3) {\n            window.web3 = new Web3(web3.currentProvider);\n          } // Non-dapp browsers...\n          else {\n              console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n            }\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 7]]);\n})));\nexport default web3;\n/*\r\nimport Web3 from 'web3'\r\n\r\n//const web3 = new Web3(window.ethereum);\r\nlet web3;\r\n\r\n\r\nif(typeof window != 'undefined'){\r\n    if (window.ethereum) {\r\n        try {\r\n            window.ethereum.enable().then(function() {\r\n                // User has allowed account access to DApp...\r\n                web3 = new Web3(window.ethereum);\r\n                alert('Using window.ethereum !');\r\n                console.log('Using window.ethereum !');\r\n            });\r\n        } catch(e) {\r\n            // User has denied account access to DApp...\r\n            alert('Cant use window.ethereum !');\r\n        }\r\n        }\r\n        // Legacy DApp Browsers\r\n        else if (window.web3) {\r\n            console.log('Using window.web3 !');\r\n            alert('Using window.web3 !');\r\n            web3 = new Web3(window.web3.currentProvider);\r\n            alert('Using window.web3 !');\r\n            console.log('Using window.web3 !');\r\n        }\r\n        // Non-DApp Browsers\r\n        else {\r\n            const provider = new Web3.providers.HttpProvider(\r\n                `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\r\n            );\r\n            web3 = new Web3(provider);\r\n        }\r\n}\r\nelse{\r\n    const provider = new Web3.providers.HttpProvider(\r\n        `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\r\n    );\r\n    web3 = new Web3(provider);\r\n}\r\nexport default web3;\r\n*/","map":{"version":3,"sources":["C:/Users/Absintu/Documents/Crypto/Apps/Kickstarter/client/web3.js"],"names":["Web3","web3","window","currentProvider","addEventListener","ethereum","enable","console","log"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAMC,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAb;AAEAD,MAAM,CAACE,gBAAP,CAAwB,MAAxB,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAE1BF,MAAM,CAACG,QAFmB;AAAA;AAAA;AAAA;;AAG5BH,UAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASE,MAAM,CAACG,QAAhB,CAAd;AAH4B;AAAA;AAAA,iBAMpBH,MAAM,CAACG,QAAP,CAAgBC,MAAhB,EANoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAW9B;AACK,cAAIJ,MAAM,CAACD,IAAX,EAAiB;AACpBC,YAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASC,IAAI,CAACE,eAAd,CAAd;AACD,WAFI,CAGL;AAHK,eAIA;AACHI,cAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACD;;AAlB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAqBA,eAAeP,IAAf;AAEA","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\nwindow.addEventListener(\"load\", async () => {\r\n  // Modern dapp browsers...\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    try {\r\n      // Request account access if needed\r\n      await window.ethereum.enable();\r\n    } catch (error) {\r\n      // User denied account access...\r\n    }\r\n  }\r\n  // Legacy dapp browsers...\r\n  else if (window.web3) {\r\n    window.web3 = new Web3(web3.currentProvider);\r\n  }\r\n  // Non-dapp browsers...\r\n  else {\r\n    console.log(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\r\n  }\r\n});\r\n\r\nexport default web3;\r\n\r\n/*\r\nimport Web3 from 'web3'\r\n\r\n//const web3 = new Web3(window.ethereum);\r\nlet web3;\r\n\r\n\r\nif(typeof window != 'undefined'){\r\n    if (window.ethereum) {\r\n        try {\r\n            window.ethereum.enable().then(function() {\r\n                // User has allowed account access to DApp...\r\n                web3 = new Web3(window.ethereum);\r\n                alert('Using window.ethereum !');\r\n                console.log('Using window.ethereum !');\r\n            });\r\n        } catch(e) {\r\n            // User has denied account access to DApp...\r\n            alert('Cant use window.ethereum !');\r\n        }\r\n        }\r\n        // Legacy DApp Browsers\r\n        else if (window.web3) {\r\n            console.log('Using window.web3 !');\r\n            alert('Using window.web3 !');\r\n            web3 = new Web3(window.web3.currentProvider);\r\n            alert('Using window.web3 !');\r\n            console.log('Using window.web3 !');\r\n        }\r\n        // Non-DApp Browsers\r\n        else {\r\n            const provider = new Web3.providers.HttpProvider(\r\n                `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\r\n            );\r\n            web3 = new Web3(provider);\r\n        }\r\n}\r\nelse{\r\n    const provider = new Web3.providers.HttpProvider(\r\n        `https://goerli.infura.io/v3/e692e48e183f4772a500fe1ab8d47f03`\r\n    );\r\n    web3 = new Web3(provider);\r\n}\r\nexport default web3;\r\n*/"]},"metadata":{},"sourceType":"module"}